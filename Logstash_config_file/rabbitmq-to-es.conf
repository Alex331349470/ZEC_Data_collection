input {
    rabbitmq {
        host => "10.0.16.10"
        port => 5672
        user => "test"
        password => "test"
        queue => "DCS_GY_ES_TEST"
        exchange => "DCS_DATA_GATHER"
        vhost => "ZEC_SCADA"
        durable => true
		auto_delete => false
        prefetch_count => 8
        codec => plain
    }
}

filter {
	json {
		source => "message"
		target => "message"
	}
	
	date {
		match => ["[message][timestamp]", "UNIX"]
		target => "[message][timestamp]"		
	}
	mutate{
		add_field=>{
			# 'output_prefix'=>'/zec_data/'
			# 'ruby_rtd_index'=>0
		}
	}
	
	
	ruby{
		code=> "event.set('[message][timestamp_plus]', LogStash::Timestamp.at(event.get('[message][timestamp]').time.localtime + 8*60*60))"
	}

	
	grok{
		match=>{
			"[message][timestamp_plus]"=>"(?<rtd_date>\d{4}-\d{2}-\d{2})T(?<rtd_time>(?<rtd_hour>\d{2}):\d{2}:\d{2})\.\d{3}Z"
		}
		
		add_field => {
			"[message][rtd_date_time]" => "%{rtd_date} %{rtd_time}"
		}
	}

	ruby {
		code => '
			event.get("[message][data]").each{ |k, v|
				full_name="#{k}"
				name = full_name.split("_")[0]
				line = full_name.split("_")[1]
				# index = Integer(event.get("ruby_rtd_index"))
				case name
				when "G2101","G2102","G2217","G2325"
					rtd_index = "kiln"
				when "DB2101","DB2209","DB2210","DB2211","DB2212","DB2213","DB2214","DB2215","DB2216","DB2217","DB2218"
					rtd_index = "weighbrige"
				when "LT2001"
					rtd_index = "fluid_tank"
				when "BK2001"
					rtd_index = "filter_press"
				when "WB2001"
					rtd_index = "micro_wave"
				when "L2101"
					rtd_index = "coulter_mixer"
				when "DG2101","DG2109"
					rtd_index = "roller"
				when "MX2101","MX2209","MX2317","MX2425","MX2533","MX2641"
					rtd_index = "pneumatic_convery"
				when "QL2001"
					rtd_index = "air_powder"
				when "DCT2101","DCT2209","DCT2210"
					rtd_index = "iron_remover"
				when "H2001"
					rtd_index = "silver_ribbon_mixer"
				when "BZLL2001"
					rtd_index = "pack_contact"
				when "CS2001"
					rtd_index = "smart_200_dehumidifier"
				when "F2101","F2209"
					rtd_index = "alpi_mechanical_powder"
				when "F2317"
					rtd_index = "lipu_mechanical_powder"
				when "XT2101","XT2209","XT2317"
					rtd_index = "auto_line"
				when "KY2001"
					rtd_index = "air_compressor"
				else
					rtd_index = ""
				end
				event.set("[message][data][#{k}][rtd_timestamp]", event.get("[message][rtd_date_time]"))
				event.set("[message][data][#{k}][rtd_name]", name)
				event.set("[message][data][#{k}][rtd_line]", line)
				event.set("[message][data][#{k}][rtd_index]", rtd_index)
				event.set("[message][data][#{k}][rtd_date]", event.get("rtd_date"))
				event.set("[message][data][#{k}][rtd_hour]", event.get("rtd_hour"))
				event.set("[message][data][#{k}][rtd_time]", event.get("rtd_time"))
				event.set("[message][data][#{k}][rtd_type]", event.get("[message][type]"))
				# event.set("[message][data][#{k}][ruby_rtd_index]", event.get("ruby_rtd_index"))
				# event.set("[message][msg][#{index}]", event.get("[message][data][#{k}]"))
				# event.set("ruby_rtd_index", Integer(Integer(event.get("ruby_rtd_index"))+1).to_s)
			}
			event.set("message", event.get("[message][data]").values)
		'
		# remove_field => [ "[message][data]" ]
	}

	split {
		field => "message"
		# add_field => { "rtd_index" => "%{[message][rtd_index]}"}
		# remove_field => [ "[message][rtd_index]"]
	}

	mutate {
		# replace => { "message" => "%{message}"}
		remove_field => [ "event"]
	}
}


output {
	# stdout {
	# 	codec => rubydebug{
	# 		# format=>"%{[message][msg]}"
	# 	}
	# }
	if [message][rtd_index] == "air_compressor" {
		elasticsearch {
			hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
			index => "zec_data_%{[message][rtd_index]}"
			action => "update"
			doc_as_upsert => true
			document_id => "%{[message][rtd_name]}"
			# document => "%{[@metadata][message]}"
			# script => "ctx._source.message = params.event.get('message')"
			codec=>plain{ 
				format=>"%{message}"
				# format=>"%{[message][data][G2101_L]}"
			}
			# template => "config/template/rabbitmq-to-es.json"
			# manage_template => "true"
			# template_overwrite => "true"
			# template_name => "zec_data_air_compressor"
		}

	}
	else {
		elasticsearch {
			hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
			index => "zec_data_%{[message][rtd_index]}"
			action => "update"
			doc_as_upsert => true
			document_id => "%{[message][rtd_name]}"
			# document => "%{[@metadata][message]}"
			# script => "ctx._source.message = params.event.get('message')"
			codec=>plain{ 
				format=>"%{message}"
				# format=>"%{[message][data][G2101_L]}"
			}
		}

	}
	# if [message][data][G2101_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "kiln"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "G2101"
	# 		codec=>line{ format=>"%{[message][data][G2101_L]}"}
	# 	}
	# }
	# if [message][data][G2102_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "kiln"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "G2102"
	# 		codec=>line{ format=>"%{[message][data][G2102_L]}"}
	# 	}
	# }
	# if [message][data][G2217_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "kiln"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "G2217"
	# 		codec=>line{ format=>"%{[message][data][G2217_L]}"}
	# 	}
	# }
	# if [message][data][G2325_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "kiln"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "G2325"
	# 		codec=>line{ format=>"%{[message][data][G2325_L]}"}
	# 	}
	# }
	# if [message][data][BZ2001_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "weighbrige"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "BZ2001"
	# 		# parent => "%{[message][data][BZ2001_L]}"
	# 		script => "ctx._source.message = params.event.get('[message][data][BZ2001_L]')"
	# 		codec=>line{ format=>"%{[message][data][BZ2001_L]}"}
	# 	}
	# }
	# if [message][data][PL2001_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "weighbrige"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "PL2001"
	# 		codec=>line{ format=>"%{[message][data][PL2001_L]}"}
	# 	}
	# }
	# if [message][data][LT2001_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "fluid_tank"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "LT2001"
	# 		codec=>line{ format=>"%{[message][data][LT2001_L]}"}
	# 	}
	# }
	# if [message][data][BK2001_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "filter_press"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "BK2001"
	# 		codec=>line{ format=>"%{[message][data][BK2001_L]}"}
	# 	}
	# }
	# if [message][data][WB2001_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "micro_wave"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "WB2001"
	# 		codec=>line{ format=>"%{[message][data][WB2001_L]}"}
	# 	}
	# }
	# if [message][data][L2101_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "coulter_mixer"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "L2101"
	# 		codec=>line{ format=>"%{[message][data][L2101_L]}"}
	# 	}
	# }
	# if [message][data][DG2101_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "roller"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "DG2101"
	# 		codec=>line{ format=>"%{[message][data][DG2101_L]}"}
	# 	}
	# }
	# if [message][data][DG2109_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "roller"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "DG2109"
	# 		codec=>line{ format=>"%{[message][data][DG2109_L]}"}
	# 	}
	# }
	# if [message][data][MX2101_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "pneumatic_convery"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "MX2101"
	# 		codec=>line{ format=>"%{[message][data][MX2101_L]}"}
	# 	}
	# }
	# if [message][data][MX2209_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "pneumatic_convery"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "MX2209"
	# 		codec=>line{ format=>"%{[message][data][MX2209_L]}"}
	# 	}
	# }
	# if [message][data][MX2317_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "pneumatic_convery"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "MX2317"
	# 		codec=>line{ format=>"%{[message][data][MX2317_L]}"}
	# 	}
	# }
	# if [message][data][MX2425_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "pneumatic_convery"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "MX2425"
	# 		codec=>line{ format=>"%{[message][data][MX2425_L]}"}
	# 	}
	# }
	# if [message][data][MX2533_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "pneumatic_convery"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "MX2533"
	# 		codec=>line{ format=>"%{[message][data][MX2533_L]}"}
	# 	}
	# }
	# if [message][data][MX2641_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "pneumatic_convery"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "MX2641"
	# 		codec=>line{ format=>"%{[message][data][MX2641_L]}"}
	# 	}
	# }
	# if [message][data][QL2001_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "air_powder"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "QL2001"
	# 		codec=>line{ format=>"%{[message][data][QL2001_L]}"}
	# 	}
	# }
	# if [message][data][DCT2101_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "iron_remover"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "DCT2101"
	# 		codec=>line{ format=>"%{[message][data][DCT2101_L]}"}
	# 	}
	# }
	# if [message][data][DCT2209_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "iron_remover"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "DCT2209"
	# 		codec=>line{ format=>"%{[message][data][DCT2209_L]}"}
	# 	}
	# }
	# if [message][data][DCT2210_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "iron_remover"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "DCT2210"
	# 		codec=>line{ format=>"%{[message][data][DCT2210_L]}"}
	# 	}
	# }
	# if [message][data][H2001_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "silver_ribbon_mixer"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "H2001"
	# 		codec=>line{ format=>"%{[message][data][H2001_L]}"}
	# 	}
	# }
	# if [message][data][BZLL2001_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "pack_contact"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "BZLL2001"
	# 		codec=>line{ format=>"%{[message][data][BZLL2001_L]}"}
	# 	}
	# }
	# if [message][data][CS2001_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "smart_200_dehumidifier"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "CS2001"
	# 		codec=>line{ format=>"%{[message][data][CS2001_L]}"}
	# 	}
	# }
	# if [message][data][F2101_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "alpi_mechanical_powder"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "F2101"
	# 		codec=>line{ format=>"%{[message][data][F2101_L]}"}
	# 	}
	# }
	# if [message][data][F2209_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "alpi_mechanical_powder"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "F2209"
	# 		codec=>line{ format=>"%{[message][data][F2209_L]}"}
	# 	}
	# }
	# if [message][data][F2317_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "lipu_mechanical_powder"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "F2317"
	# 		codec=>line{ format=>"%{[message][data][F2317_L]}"}
	# 	}
	# }
	# if [message][data][XT2101_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "auto_line"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "XT2101"
	# 		codec=>line{ format=>"%{[message][data][XT2101_L]}"}
	# 	}
	# }
	# if [message][data][XT2209_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "auto_line"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "XT2209"
	# 		codec=>line{ format=>"%{[message][data][XT2209_L]}"}
	# 	}
	# }
	# if [message][data][XT2317_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "auto_line"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "XT2317"
	# 		codec=>line{ format=>"%{[message][data][XT2317_L]}"}
	# 	}
	# }
	# if [message][data][KY2001_L] {
	#     elasticsearch {
	# 		hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
	# 		index => "air_compressor"
	# 		action => "update"
	# 		doc_as_upsert => true
	# 		document_id => "KY2001"
	# 		codec=>line{ format=>"%{[message][data][KY2001_L]}"}
	# 	}
	# }
}
