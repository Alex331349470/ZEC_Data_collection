input {
    rabbitmq {
        host => "10.10.16.128"
        port => 5672
        user => "test"
        password => "test"
        queue => "DCS_GY_GATHER_2_1_ES"
        exchange => "DCS_DATA_GATHER_2_1"
        vhost => "ZEC_SCADA"
        durable => true
		auto_delete => false
        prefetch_count => 8
        codec => plain
    }
}

filter {
	json {
		source => "message"
		target => "message"
	}
	
	date {
		match => ["[message][timestamp]", "UNIX"]
		target => "[message][timestamp]"		
	}
	mutate{
		add_field=>{
			# 'output_prefix'=>'/zec_data/'
			# 'ruby_rtd_index'=>0
		}
	}
	
	
	ruby{
		code=> "event.set('[message][timestamp_plus]', LogStash::Timestamp.at(event.get('[message][timestamp]').time.localtime + 8*60*60))"
	}

	
	grok{
		match=>{
			"[message][timestamp_plus]"=>"(?<rtd_date>\d{4}-\d{2}-\d{2})T(?<rtd_time>(?<rtd_hour>\d{2}):\d{2}:\d{2})\.\d{3}Z"
		}
		
		add_field => {
			"[message][rtd_date_time]" => "%{rtd_date} %{rtd_time}"
		}
	}

	ruby {
		code => '
			event.get("[message][data]").each{ |k, v|
				full_name="#{k}"
				name = full_name.split("_")[0]

				# index = Integer(event.get("ruby_rtd_index"))
				case name
				when "G3101", "G3102", "G3103", "G3104", "G3105", "G3106", "G3107", "G3108", "G3209", "G3210", "G3211", "G3212"
					rtd_index = "kiln"
				when "DB3101", "DB3102", "DB3203", "DB3204", "DB3205", "DB3206", "DB3307", "DB3308", "DB3409", "DB3410", "DB3411", "DB3412", "DB3413"
					rtd_index = "weighbrige"
				when "L3101", "L3102", "L3103", "L3104", "L3205", "L3206"
					rtd_index = "coulter_mixer"
				when "DG3101", "DG3102", "DG3103", "DG3104"
					rtd_index = "roller"
				when "MX3101", "MX3102", "MX3103", "MX3104", "MX3205", "MX3206", "MX3207", "MX3208", "MX3309", "MX3310", "MX3411", "MX3412", "MX3413", "MX3414"
					rtd_index = "pneumatic_convery"
				when "QL3001", "QL3002", "QL3003", "QL3004"
					rtd_index = "air_powder"
				when "DCT3101", "DCT3102", "DCT3103", "DCT3104", "DCT3205", "DCT3206", "DCT3207", "DCT3208", "DCT3209", "DCT3210", "DCT3211", "DCT3212"
					rtd_index = "iron_remover"
				when "H3005", "H3006", "H3007", "H3008"
					rtd_index = "silver_ribbon_mixer"
				when "H3001", "H3002", "H3003", "H3004"
					rtd_index = "hong_ribbon_mixer"
				when "CS3001", "CS3002"
					rtd_index = "s1200_dehumidifier"
				when "SDJ3001", "SDJ3002", "SDJ3003", "SDJ3004", "JFWSD1001"
					rtd_index = "monitor_thermometer"
				when "F3101", "F3102", "F3103", "F3104"
					rtd_index = "alpi_mechanical_powder"
				when "XT3101", "XT3102", "XT3103", "XT3104", "XT3205", "XT3206", "XT3207", "XT3208"
					rtd_index = "auto_line"
				when "KY3001"
					rtd_index = "air_compressor"
				else
					rtd_index = ""
				end

				line = full_name.split("_")[1]

				event.set("[message][data][#{k}][rtd_timestamp]", event.get("[message][rtd_date_time]"))
				event.set("[message][data][#{k}][rtd_name]", name)
				event.set("[message][data][#{k}][rtd_line]", line)
				event.set("[message][data][#{k}][rtd_index]", rtd_index)
				event.set("[message][data][#{k}][rtd_date]", event.get("rtd_date"))
				event.set("[message][data][#{k}][rtd_hour]", event.get("rtd_hour"))
				event.set("[message][data][#{k}][rtd_time]", event.get("rtd_time"))
				event.set("[message][data][#{k}][rtd_type]", event.get("[message][type]"))
				# event.set("[message][data][#{k}][ruby_rtd_index]", event.get("ruby_rtd_index"))
				# event.set("[message][msg][#{index}]", event.get("[message][data][#{k}]"))
				# event.set("ruby_rtd_index", Integer(Integer(event.get("ruby_rtd_index"))+1).to_s)
			}
			event.set("message", event.get("[message][data]").values)
		'
		# remove_field => [ "[message][data]" ]
	}

	split {
		field => "message"
		# add_field => { "rtd_index" => "%{[message][rtd_index]}"}
		# remove_field => [ "[message][rtd_index]"]
	}

	mutate {
		# replace => { "message" => "%{message}"}
		remove_field => [ "event"]
	}
}


output {
	# stdout {
	# 	codec => rubydebug{
	# 		# format=>"%{[message][msg]}"
	# 	}
	# }
	if [message][rtd_index] == "air_compressor" {
		elasticsearch {
			hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
			index => "zec_data_%{[message][rtd_index]}"
			action => "update"
			doc_as_upsert => true
			document_id => "%{[message][rtd_name]}"
			# document => "%{[@metadata][message]}"
			# script => "ctx._source.message = params.event.get('message')"
			codec=>plain{ 
				format=>"%{message}"
				# format=>"%{[message][data][G2101_L]}"
			}
			# template => "config/template/rabbitmq-to-es.json"
			# manage_template => "true"
			# template_overwrite => "true"
			# template_name => "zec_data_air_compressor"
		}

	}
	else {
		elasticsearch {
			hosts => ["http://10.10.16.111:9200", "http://10.10.16.112:9200"]
			index => "zec_data_%{[message][rtd_index]}"
			action => "update"
			doc_as_upsert => true
			document_id => "%{[message][rtd_name]}"
			# document => "%{[@metadata][message]}"
			# script => "ctx._source.message = params.event.get('message')"
			codec=>plain{ 
				format=>"%{message}"
				# format=>"%{[message][data][G2101_L]}"
			}
		}

	}
}
