input {
    rabbitmq {
        host => "10.10.16.128"
        port => 5672
        user => "test"
        password => "test"
        queue => "GYJF_GY_GATHER_2_2"
        exchange => "GYJF_DATA_GATHER_2_2"
        vhost => "ZEC_SCADA"
        durable => true
		auto_delete => false
        prefetch_count => 32
        codec => plain
    }
}

filter {
	json {
		source => "message"
		target => "message"
	}
	
	date {
		match => ["[message][timestamp]", "UNIX"]
		target => "[message][timestamp]"		
	}
	mutate{
		add_field=>{
			'output_prefix'=>'/zec_data/'
		}
	}
	
	
	ruby{
		code=> "event.set('[message][timestamp_plus]', LogStash::Timestamp.at(event.get('[message][timestamp]').time.localtime + 8*60*60))"
	}

	
	grok{
		match=>{
			"[message][timestamp_plus]"=>"(?<rtd_date>\d{4}-\d{2}-\d{2})T(?<rtd_time>(?<rtd_hour>\d{2}):\d{2}:\d{2})\.\d{3}Z"
		}
		
		add_field => {
			"[message][rtd_date_time]" => "%{rtd_date} %{rtd_time}"
		}
	}

	ruby {
		code => '
			event.get("[message][data]").each{ |k, v|
				full_name="#{k}"
				name = full_name.split("_")[0]

				case name
				when "G2101", "G2102", "G2217", "G2325", "G2103", "G2104", "G2218", "G2326", "G2105", "G2106", "G2219", "G2327", "G2107", "G2108", "G2220", "G2328", "G2109", "G2110", "G2221", "G2329", "G2111", "G2112", "G2222", "G2330", "G2113", "G2114", "G2223", "G2331", "G2115", "G2116", "G2224", "G2332"
					rtd_index = "kiln"
				when "DB2102", "DB2210", "DB2217", "DB2209", "DB2101", "DB2103", "DB2211", "DB2104", "DB2212", "DB2105", "DB2213", "DB2218", "DB2106", "DB2214", "DB2107", "DB2215", "DB2108", "DB2216"
					rtd_index = "weighbrige"
				when "LT2001","LT2004", "LT2007", "LT2010", "LT2013", "LT2016", "LT2019", "LT2022"
					rtd_index = "fluid_tank"
				when "BK2001", "BK2002", "BK2003", "BK2004", "BK2005", "BK2006", "BK2007", "BK2008"
					rtd_index = "filter_press"
				when "WB2001", "WB2002", "WB2003", "WB2004", "WB2005", "WB2006", "WB2007", "WB2008"
					rtd_index = "micro_wave"
				when "L2101", "L2102", "L2103", "L2104", "L2105", "L2106", "L2107", "L2108"
					rtd_index = "coulter_mixer"
				when "DG2101","DG2209", "DG2102", "DG2210", "DG2103", "DG2211", "DG2104", "DG2212", "DG2105", "DG2213", "DG2218", "DG2106", "DG2214", "DG2107", "DG2215", "DG2108", "DG2216"
					rtd_index = "roller"
				when "MX2101","MX2209","MX2317","MX2425","MX2533","MX2641","MX2102","MX2210","MX2318","MX2426","MX2534","MX2642","MX2103","MX2211","MX2319","MX2427","MX2535","MX2643","MX2104","MX2212","MX2320","MX2428","MX2536","MX2644","MX2105","MX2213","MX2321","MX2429","MX2537","MX2645","MX2106","MX2214","MX2322","MX2430","MX2538","MX2646","MX2107","MX2215","MX2323","MX2431","MX2539","MX2647","MX2108","MX2216","MX2324","MX2432","MX2540","MX2648"
					rtd_index = "pneumatic_convery"
				when "QL2001", "QL2002", "QL2003", "QL2004", "QL2005", "QL2006", "QL2007", "QL2008"
					rtd_index = "air_powder"
				when "DCT2101","DCT2209","DCT2210","DCT2102","DCT2211","DCT2212","DCT2103","DCT2213","DCT2214","DCT2104","DCT2215","DCT2216","DCT2105","DCT2217","DCT2218","DCT2106","DCT2219","DCT2220","DCT2107","DCT2221","DCT2222","DCT2108","DCT2223","DCT2224"
					rtd_index = "iron_remover"
				when "H2001", "H2002", "H2003", "H2004", "H2005", "H2006"
					rtd_index = "silver_ribbon_mixer"
				when "H2007", "H2008"
					rtd_index = "hong_ribbon_mixer"
				when "BZLLG2001", "BZLLG2002", "BZLLG2003", "BZLLG2004", "BZLLG2005", "BZLLG2006", "BZLLG2007", "BZLLG2008"
					rtd_index = "pack_contact"
				when "CS2001","CS2002"
					rtd_index = "smart_200_dehumidifier"
				when "CS2003","CS2004"
					rtd_index = "s1200_dehumidifier"
				when "SC2SDJ2001", "SC2SDJ2002", "SC2SDJ2003", "SC2SDJ2004", "SC2SDJ2005", "SC2SDJ2006", "SC2SDJ2007", "SC2SDJ2008"
					rtd_index = "monitor_thermometer"
				when "F2101","F2209","F2102","F2210","F2103","F2211","F2104","F2212","F2105","F2213","F2214","F2106","F2107","F2215","F2108","F2216"
					rtd_index = "alpi_mechanical_powder"
				when "F2317","F2318","F2319","F2320","F2321","F2322","F2323","F2324"
					rtd_index = "lipu_mechanical_powder"
				when "XT2101","XT2209","XT2317","XT2102","XT2210","XT2318","XT2103","XT2211","XT2319","XT2104","XT2212","XT2320","XT2105","XT2213","XT2321","XT2106","XT2214","XT2322","XT2107","XT2215","XT2323","XT2108","XT2216","XT2324"
					rtd_index = "auto_line"
				when "KY2001"
					rtd_index = "air_compressor"
				else
					rtd_index = ""
				end


				if full_name[-1] == "_"
					line = "NONE"
				else
					line = full_name.split("_")[1]
				end

				event.set("[message][data][#{k}][rtd_timestamp]", event.get("[message][rtd_date_time]"))
				event.set("[message][data][#{k}][rtd_name]", name)
				event.set("[message][data][#{k}][rtd_line]", line)
				event.set("[message][data][#{k}][rtd_index]", rtd_index)
				event.set("[message][data][#{k}][rtd_date]", event.get("rtd_date"))
				event.set("[message][data][#{k}][rtd_hour]", event.get("rtd_hour"))
				event.set("[message][data][#{k}][rtd_time]", event.get("rtd_time"))
				event.set("[message][data][#{k}][rtd_type]",event.get("[message][type]"))
		}
		event.set("message", event.get("[message][data]").values)
		'
	}

	

	mutate {
		remove_field => ['event']
	}

	split {
		field => "message"
	}
}


output {
	webhdfs{
			host=>"slave1"
			port=>50070
			user=>"alex"
			compression=>snappy
			# snappy_format=>file
			path=>"%{output_prefix}%{[message][rtd_index]}/rtd_date=%{[message][rtd_date]}/rtd_hour=%{[message][rtd_hour]}/rtd_line=%{[message][rtd_line]}/rtd_name=%{[message][rtd_name]}/data.json"
			codec=>line{ format=>"%{message}"}
			# write_behavior=>"overwrite"
			# flush_interval=>60
			# gzip=>true
			flush_size => 20000
    		idle_flush_time => 50
    		retry_interval => 45
		}
}

