input {
    rabbitmq {
        host => "10.0.16.10"
        port => 5672
        user => "test"
        password => "test"
        queue => "DCS_GY_GATHER"
        exchange => "DCS_DATA_GATHER"
        vhost => "ZEC_SCADA"
        durable => true
		auto_delete => false
        prefetch_count => 32
        codec => plain
    }
}

filter {
	json {
		source => "message"
		target => "message"
	}
	
	date {
		match => ["[message][timestamp]", "UNIX"]
		target => "[message][timestamp]"		
	}
	mutate{
		add_field=>{
			'output_prefix'=>'/zec_data/'
		}
	}
	
	
	ruby{
		code=> "event.set('[message][timestamp_plus]', LogStash::Timestamp.at(event.get('[message][timestamp]').time.localtime + 8*60*60))"
	}

	
	grok{
		match=>{
			"[message][timestamp_plus]"=>"(?<rtd_date>\d{4}-\d{2}-\d{2})T(?<rtd_time>(?<rtd_hour>\d{2}):\d{2}:\d{2})\.\d{3}Z"
		}
		
		add_field => {
			"[message][rtd_date_time]" => "%{rtd_date} %{rtd_time}"
		}

		add_field => {
			"[message][]" => "%{rtd_date}"
		}
	}

	ruby {
		code => '
			machine_name_array = ["DCT2101_L", "MX2209_L", "G2217_L", "XT2209_L", "DG2209_L", "MX2317_L", "F2209_L", "MX2425_L", "BK2001_L", "WB2001_L", "MX2533_L", "G2325_L", "XT2317_L", "MX2641_L", "F2317_L", "H2001_L", "DCT2209_L", "DCT2210_L", "DB2209_L", "SC2SDJ2001_L", "LT2001_L", "DB2217_", "CS2001_", "KY2001_","DB2102_M", "L2102_M", "G2103_M", "G2104_M", "XT2102_M", "DG2102_M", "MX2102_M", "F2102_M", "QL2002_M", "DCT2102_M", "MX2210_M", "G2218_M", "XT2210_M", "DG2210_M", "MX2318_M", "F2210_M", "MX2426_M", "BK2002_M", "WB2002_M", "MX2534_M", "G2326_M", "XT2318_M", "MX2642_M", "F2318_M", "H2002_M", "DCT2211_M", "DCT2212_M", "DB2210_M", "SC2SDJ2002_M", "LT2004_M","DB2103_N", "L2103_N", "G2105_N", "G2106_N", "XT2103_N", "DG2103_N", "MX2103_N", "F2103_N", "QL2003_N", "DCT2103_N", "MX2211_N", "G2219_N", "XT2211_N", "DG2211_N", "MX2319_N", "F2211_N", "MX2427_N", "BK2003_N", "WB2003_N", "MX2535_N", "G2327_N", "XT2319_N", "MX2643_N", "F2319_N", "H2003_N", "DCT2213_N", "DCT2214_N", "DB2211_N", "SC2SDJ2003_N", "LT2007_N","DB2104_P", "L2104_P", "G2107_P", "G2108_P", "XT2104_P", "DG2104_P", "MX2104_P", "F2104_P", "QL2004_P", "DCT2104_P", "MX2212_P", "G2220_P", "XT2212_P", "DG2212_P", "MX2320_P", "F2212_P", "MX2428_P", "BK2004_P", "WB2004_P", "MX2536_P", "G2328_P", "XT2320_P", "MX2644_P", "F2320_P", "H2004_P", "DCT2215_P", "DCT2216_P", "DB2212_P", "SC2SDJ2004_P", "LT2010_P","DB2105_Q", "L2105_Q", "G2109_Q", "G2110_Q", "XT2105_Q", "DG2105_Q", "MX2105_Q", "F2105_Q", "QL2005_Q", "DCT2105_Q", "MX2213_Q", "G2221_Q", "XT2213_Q", "DG2213_Q", "MX2321_Q", "F2213_Q", "MX2429_Q", "BK2005_Q", "WB2005_Q", "MX2537_Q", "G2329_Q", "XT2321_Q", "MX2645_Q", "F2321_Q", "H2005_Q", "DCT2217_Q", "DCT2218_Q", "DB2213_Q", "SC2SDJ2005_Q", "LT2013_Q","DB2106_R", "L2106_R", "G2111_R", "G2112_R", "XT2106_R", "DG2106_R", "MX2106_R", "F2106_R", "QL2006_R", "DCT2106_R", "MX2214_R", "G2222_R", "XT2214_R", "DG2214_R", "MX2322_R", "F2214_R", "MX2430_R", "BK2006_R", "WB2006_R", "MX2538_R", "G2330_R", "XT2322_R", "MX2646_R", "F2322_R", "H2006_R", "DCT2219_R", "DCT2220_R", "DB2214_R", "SC2SDJ2006_R", "LT2016_R","DB2107_S", "L2107_S", "G2113_S", "G2114_S", "XT2107_S", "DG2107_S", "MX2107_S", "F2107_S", "QL2007_S", "DCT2107_S", "MX2215_S", "G2223_S", "XT2215_S", "DG2215_S", "MX2323_S", "F2215_S", "MX2431_S", "BK2007_S", "WB2007_S", "MX2539_S", "G2331_S", "XT2323_S", "MX2647_S", "F2323_S", "H2007_S", "DCT2221_S", "DCT2222_S", "DB2215_S", "SC2SDJ2007_S", "LT2019_S","DB2108_T", "L2108_T", "G2115_T", "G2116_T", "XT2108_T", "DG2108_T", "MX2108_T", "F2108_T", "QL2008_T", "DCT2108_T", "MX2216_T", "G2224_T", "XT2216_T", "DG2216_T", "MX2324_T", "F2216_T", "MX2432_T", "BK2008_T", "WB2008_T", "MX2540_T", "G2332_T", "XT2324_T", "MX2648_T", "F2324_T", "H2008_T", "DCT2223_T", "DCT2224_T", "DB2216_T", "SC2SDJ2008_T", "LT2022_T"]

			event.set("[message][machines]", machine_name_array)

			event.get("[message][data]").each{ |k, v|
				full_name="#{k}"
				name = full_name.split("_")[0]

				case name
				when "G2101", "G2102", "G2217", "G2325", "G2103", "G2104", "G2218", "G2326", "G2105", "G2106", "G2219", "G2327", "G2107", "G2108", "G2220", "G2328", "G2109", "G2110", "G2221", "G2329", "G2111", "G2112", "G2222", "G2330", "G2113", "G2114", "G2223", "G2331", "G2115", "G2116", "G2224", "G2332"
					rtd_index = "kiln"
				when "DB2102", "DB2210", "DB2217", "DB2209", "DB2101", "DB2103", "DB2211", "DB2104", "DB2212", "DB2105", "DB2213", "DB2218", "DB2106", "DB2214", "DB2107", "DB2215", "DB2108", "DB2216"
					rtd_index = "weighbrige"
				when "LT2001","LT2004", "LT2007", "LT2010", "LT2013", "LT2016", "LT2019", "LT2022"
					rtd_index = "fluid_tank"
				when "BK2001", "BK2002", "BK2003", "BK2004", "BK2005", "BK2006", "BK2007", "BK2008"
					rtd_index = "filter_press"
				when "WB2001", "WB2002", "WB2003", "WB2004", "WB2005", "WB2006", "WB2007", "WB2008"
					rtd_index = "micro_wave"
				when "L2101", "L2102", "L2103", "L2104", "L2105", "L2106", "L2107", "L2108"
					rtd_index = "coulter_mixer"
				when "DG2101","DG2209", "DG2102", "DG2210", "DG2103", "DG2211", "DG2104", "DG2212", "DG2105", "DG2213", "DG2218", "DG2106", "DG2214", "DG2107", "DG2215", "DG2108", "DG2216"
					rtd_index = "roller"
				when "MX2101","MX2209","MX2317","MX2425","MX2533","MX2641","MX2102","MX2210","MX2318","MX2426","MX2534","MX2642","MX2103","MX2211","MX2319","MX2427","MX2535","MX2643","MX2104","MX2212","MX2320","MX2428","MX2536","MX2644","MX2105","MX2213","MX2321","MX2429","MX2537","MX2645","MX2106","MX2214","MX2322","MX2430","MX2538","MX2646","MX2107","MX2215","MX2323","MX2431","MX2539","MX2647","MX2108","MX2216","MX2324","MX2432","MX2540","MX2648"
					rtd_index = "pneumatic_convery"
				when "QL2001", "QL2002", "QL2003", "QL2004", "QL2005", "QL2006", "QL2007", "QL2008"
					rtd_index = "air_powder"
				when "DCT2101","DCT2209","DCT2210","DCT2102","DCT2211","DCT2212","DCT2103","DCT2213","DCT2214","DCT2104","DCT2215","DCT2216","DCT2105","DCT2217","DCT2218","DCT2106","DCT2219","DCT2220","DCT2107","DCT2221","DCT2222","DCT2108","DCT2223","DCT2224"
					rtd_index = "iron_remover"
				when "H2001", "H2002", "H2003", "H2004", "H2005", "H2006", "H2007", "H2008"
					rtd_index = "silver_ribbon_mixer"
				when "BZLL2001"
					rtd_index = "pack_contact"
				when "CS2001","CS2002"
					rtd_index = "smart_200_dehumidifier"
				when "F2101","F2209","F2102","F2210","F2103","F2211","F2104","F2212","F2105","F2213","F2214","F2106"
					rtd_index = "alpi_mechanical_powder"
				when "F2317","F2318","F2319","F2320","F2321","F2322","F2323","F2324"
					rtd_index = "lipu_mechanical_powder"
				when "XT2101","XT2209","XT2317","XT2102","XT2210","XT2318","XT2103","XT2211","XT2319","XT2104","XT2212","XT2320","XT2105","XT2213","XT2321","XT2106","XT2214","XT2322","XT2107","XT2215","XT2323","XT2108","XT2216","XT2324"
					rtd_index = "auto_line"
				when "KY2001"
					rtd_index = "air_compressor"
				else
					rtd_index = ""
				end

				line = full_name.split("_")[1]

				if line == ""
					line = "NONE"
				end

				event.set("[message][data][#{k}][rtd_timestamp]", event.get("[message][rtd_date_time]"))
				event.set("[message][data][#{k}][rtd_name]", name)
				event.set("[message][data][#{k}][rtd_line]", line)
				event.set("[message][data][#{k}][rtd_index]", rtd_index)
				event.set("[message][data][#{k}][rtd_date]", event.get("rtd_date"))
				event.set("[message][data][#{k}][rtd_hour]", event.get("rtd_hour"))
				event.set("[message][data][#{k}][rtd_time]", event.get("rtd_time"))
				event.set("[message][data][#{k}][rtd_type]",event.get("[message][type]"))
		}
		'
	}
}


output {
	for machine in [message][machines] {
		if [message][data][each] {
			webhdfs{
				host=>"slave1"
				port=>50070
				user=>"alex"
				compression=>snappy
				# snappy_format=>file
				path=>"%{output_prefix}%{[message][data][machine][rtd_index]}/rtd_date=%{[message][data][machine][rtd_date]}/rtd_hour=%{[message][data][machine][rtd_hour]}/rtd_line=%{[message][data][machine][rtd_line]}/rtd_name=%{[message][data][machine][rtd_name]}/data.json"
				codec=>line{ format=>"%{[message][data][machine]}"}
				# write_behavior=>"overwrite"
				# flush_interval=>60
				# gzip=>true
				flush_size => 20000
				idle_flush_time => 50
				retry_interval => 45
			}
		}
	}
}
